{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhCQO,SAASC,eAAe,QAEhCC,iBAAiB,UAAU,SAAAC,GAChCA,EAAGC,iBAOH,IALA,IAAMC,EAAW,IAAIC,SAASH,EAAGI,QAC3BC,EAAaC,SAASJ,EAASK,IAAI,SAAU,IAC7CC,EAAOF,SAASJ,EAASK,IAAI,QAAS,IACtCE,EAASH,SAASJ,EAASK,IAAI,UAAW,IAEvCG,EAAI,EAAGA,EAAID,EAAQC,IAC1BtB,EAAcsB,EAAI,EAAGL,EAAaK,EAAIF,GACnCG,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,wBACtBC,QAAMC,IAAI,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3D6B,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClB0B,QAAQC,IAAI,sBAAuCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACzDuB,EAAA3B,GAAS4B,OAAOM,QAAQ,sB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.getElementById('form');\n\nformEl.addEventListener('submit', ev => {\n  ev.preventDefault();\n\n  const formData = new FormData(ev.target);\n  const firstDelay = parseInt(formData.get('delay'), 10);\n  const step = parseInt(formData.get('step'), 10);\n  const amount = parseInt(formData.get('amount'), 10);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, firstDelay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success('✅ Fulfilled promise!');\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure('❌ Rejected promise!');\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","getElementById","addEventListener","ev","preventDefault","formData","FormData","target","firstDelay","parseInt","get","step","amount","i","then","param","$parcel$interopDefault","Notify","success","console","log","concat","catch","failure"],"version":3,"file":"03-promises.d0ef01c6.js.map"}